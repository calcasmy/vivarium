{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
   // .vscode/launch.json
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Debug Manual Control (Light ON)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/manual_control/src/control_device.py", // Path to your script
            "args": ["--device", "light", "--action", "on"], // Command-line arguments
            "cwd": "${workspaceFolder}", // Current working directory should be the project root
            "console": "integratedTerminal", // To see print statements and logs
            "justMyCode": true // Set to false if you want to step into installed library code
        },
        {
            "name": "Debug Manual Control (Light OFF)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/manual_control/src/control_device.py",
            "args": ["--device", "light", "--action", "off"],
            "cwd": "${workspaceFolder}",
            "console": "integratedTerminal",
            "justMyCode": true
        },
        {
            "name": "Debug Manual Control (Light Status)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/manual_control/src/control_device.py",
            "args": ["--device", "light", "--action", "status"],
            "cwd": "${workspaceFolder}",
            "console": "integratedTerminal",
            "justMyCode": true
        },
        {
            "name": "Debug Manual Control (Mister ON)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/manual_control/src/control_device.py",
            "args": ["--device", "mister", "--action", "on"],
            "cwd": "${workspaceFolder}",
            "console": "integratedTerminal",
            "justMyCode": true
        },
        {
            "name": "Debug Manual Control (Mister OFF)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/manual_control/src/control_device.py",
            "args": ["--device", "mister", "--action", "off"],
            "cwd": "${workspaceFolder}",
            "console": "integratedTerminal",
            "justMyCode": true
        },
        {
            "name": "Debug Manual Control (Mister Run for 5s)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/manual_control/src/control_device.py",
            "args": ["--device", "mister", "--action", "run_for", "--duration", "5"],
            "cwd": "${workspaceFolder}",
            "console": "integratedTerminal",
            "justMyCode": true
        },
        {
            "name": "Debug Manual Control (Mister Status)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/manual_control/src/control_device.py",
            "args": ["--device", "mister", "--action", "status"],
            "cwd": "${workspaceFolder}",
            "console": "integratedTerminal",
            "justMyCode": true
        },
        {
            "name": "Debug db_setup.py (Local)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/db_setup.py", // Assumes db_setup.py is at the root
            "console": "integratedTerminal", // Important for interactive prompts
            "cwd": "${workspaceFolder}",     // Ensures script runs from project root
            "args": [],                      // No arguments for local setup
            "justMyCode": true
        },
        {
            "name": "Debug db_setup.py (Remote)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/db_setup.py", // Assumes db_setup.py is at the root
            "console": "integratedTerminal", // Important for interactive prompts
            "cwd": "${workspaceFolder}",     // Ensures script runs from project root
            "args": ["--isremote"],          // Pass the --isremote argument
            "justMyCode": true
        },
        {
            "name": "Debug db_setup.py (Supabase)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/db_setup.py", // Assumes db_setup.py is at the root
            "console": "integratedTerminal", // Important for interactive prompts
            "cwd": "${workspaceFolder}",     // Ensures script runs from project root
            "args": ["--issupabase"],          // Pass the --isremote argument
            "justMyCode": true
        },
        {
            "name": "Debug db_setup.py (Supabase)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/db_setup_v2.py", // Assumes db_setup.py is at the root
            "console": "integratedTerminal", // Important for interactive prompts
            "cwd": "${workspaceFolder}",     // Ensures script runs from project root
            "args": ["--issupabase"],          // Pass the --isremote argument
            "justMyCode": true
        },

        // --- 1. Database Setup Only ---
        {
            "name": "Orchestrator: PostgreSQL Local Setup Only",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/deploy/src/orchestrator.py",
            "args": ["--postgres", "--local"],
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Orchestrator: PostgreSQL Remote Setup Only",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/deploy/src/orchestrator.py",
            "args": ["--postgres", "--remote"],
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Orchestrator: Supabase Setup Only",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/deploy/src/orchestrator.py",
            "args": ["--supabase"],
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Orchestrator: Other DB Setup Only (e.g., Oracle)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/deploy/src/orchestrator.py",
            "args": ["--other", "oracle", "--local"],
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}"
        },

        // --- 2. Data Loading Only (Skip Database Setup) ---
        {
            "name": "Orchestrator: Load JSON Data Only (Skip Setup)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/deploy/src/orchestrator.py",
            "args": ["--load-json-data", "weather/rawfiles", "--skip"],
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Orchestrator: Load DB Dump Only (Skip Setup)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/deploy/src/orchestrator.py",
            "args": ["--load-db-dump", "deploy/src/database/postgres_sensors_devices_data.sql", "--skip"],
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}"
        },

        // --- 3. Database Setup and Data Loading ---
        {
            "name": "Orchestrator: Postgres Local Setup & Load JSON Data",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/deploy/src/orchestrator.py",
            "args": ["--postgres", "--local", "--load-json-data", "weather/rawfiles"],
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Orchestrator: Postgres Local Setup & Load DB Dump",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/deploy/src/orchestrator.py",
            "args": ["--postgres", "--local", "--load-db-dump", "/home/calcasmy/vivarium/deploy/src/database/postgres_sensors_devices_data.sql"],
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Orchestrator: Supabase Setup & Load JSON Data",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/deploy/src/orchestrator.py",
            "args": ["--supabase", "--load-json-data"],
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Orchestrator: Supabase Setup & Load DB Dump",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/deploy/src/orchestrator.py",
            "args": ["--supabase", "--load-db-dump", "deploy/src/database/postgres_sensors_devices_data.sql"],
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}"
        }
    ]
}